# With docker
# Build and push connector images to Azure Container Registry
# Update infrastructure repository

trigger:
- develop

resources:
  repositories:
  - repository: Infrastructure
    type: bitbucket
    endpoint: BitbucketAzureServiceConnection
    name: NetworkPerspective/NetworkPerspective.Infrastructure
    ref: 'refs/heads/develop'  

variables:
  version: '2.1'
  tag: '$(version).$(Build.BuildId)'

  commitTagFile: 'Connectors/Test/Tag.txt'
  commitTagMessage: 'Connectors TEST release v$(tag)'

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'c3bed9f0-8703-4975-8bda-2a630b25e923'  
  containerRegistry: 'testnetworkperspective.azurecr.io'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: self
      persistCredentials: true
      displayName: Checkout repo
    - task: Docker@2
      displayName: Build and push Worker
      inputs:
        command: buildAndPush
        repository: 'connectors/worker'
        dockerfile: '$(Build.SourcesDirectory)/src/Worker.Dockerfile'
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
          latest
    - task: Docker@2
      displayName: Build and push Orchestrator
      inputs:
        command: buildAndPush
        repository: 'connectors/orchestrator'
        dockerfile: '$(Build.SourcesDirectory)/src/Orchestrator.Dockerfile'
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
          latest
    - script: |
        git tag v$(tag)
        git push origin v$(tag)
      workingDirectory: $(Build.SourcesDirectory)
      displayName: Add tag to repository

- stage: UpdateInfrastructure 
  displayName: Update infrastructure 
  jobs:
  - job: BumpVersion
    displayName: Bump version
    pool:
      vmImage: $(vmImageName)
    steps:
      - checkout: Infrastructure
        displayName: Checkout infrastructure
        clean: true
        persistCredentials: true
        path: 'Infrastructure' 
        fetchDepth: 0             # Fetch all history and branches

      - script: |
          git config --global user.email azure@networkperspective.io
          git config --global user.name "Azure Pipeline"

          git fetch origin develop          
          git checkout -B develop origin/develop
          git pull origin develop           

          echo $(tag) > $(commitTagFile)
          git add -A
          git commit -m "$(commitTagMessage)"
          git push --set-upstream origin develop 

          git push origin develop

        displayName: Update TEST release version
        workingDirectory: $(Pipeline.Workspace)/Infrastructure  