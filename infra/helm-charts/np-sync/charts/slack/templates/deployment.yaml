apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "slack.fullname" . }}
  labels:
    {{- include "slack.labels" . | nindent 4 }}
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      {{- include "slack.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
      {{- if and .Values.global.redeployOnUpdate }}
        rollme: {{ randAlphaNum 5 | quote }}
      {{- end }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}      
      labels:
        {{- include "slack.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "slack.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      automountServiceAccountToken: false
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:            
            {{- if and .Values.appSettings .Values.appSettings.connectionString }}
            - name: ConnectionStrings__Database
              value: {{ .Values.appSettings.connectionString }}
            {{- else }}
            - name: MSSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                {{- if .Values.global.mssql.saSecret }}
                  name: {{ .Values.global.mssql.saSecret }}
                {{- else }}
                  name: {{ template "mssql.fullname" . }}-secret
                {{- end }}                  
                  key: sapassword                  
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: ConnectionStrings__Database
              value: Server=tcp:{{ template "mssql.fullname" . }}.$(NAMESPACE).svc.cluster.local,1433;Initial Catalog=slack-db;Persist Security Info=False;User ID=sa;Password=$(MSSQL_PASSWORD);MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=True;Connection Timeout=30;
            {{- end }}
            - name: Infrastructure__NetworkPerspectiveCore__BaseUrl
              value: {{ .Values.global.appSettings.networkPerspectiveApi }}
            - name: NLog__variables__minLevel
              value: {{ .Values.appSettings.logLevel }}
            - name: APPLICATIONINSIGHTS_CONNECTION_STRING
              value: {{ .Values.global.appSettings.applicationInsightsConnectionString }}
            - name: ASPNETCORE_URLS
              value: http://+:{{ .Values.service.port }}
            {{- if .Values.global.appSettings.useLocalHcpVault }}            
            - name: Infrastructure__HcpVault__BaseUrl
              value: "https://{{ .Values.global.domainValidation.hostedZoneName }}:8200"
            {{- end }}
          volumeMounts:
            - name: logs
              mountPath: /app/logs
            {{- if not (.Values.global.appSettings.useLocalHcpVault) }}
            - name: rsa-keys
              mountPath: "/app/keys"              
            - name: secrets
              mountPath: "/app/secrets"              
            {{- end }}
            - name: config-volume
              mountPath: /app/appsettings.Production.json
              subPath: appsettings.Production.json
            - name: service-account-token
              mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        {{- if .Values.global.appSettings.useLocalHcpVault }}
        - name: vault-proxy
          image: alpine/socat
          command:
          - /bin/sh
          - -c
          - socat TCP-LISTEN:8200,fork TCP:chart-vault:8200
          ports:
          - containerPort: 8200
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
        {{- end }}
      {{- with .Values.global.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.global.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      - name: logs
      {{- if .Values.logVolume.enabled }}
        persistentVolumeClaim:
          {{- if .Values.logVolume.existingDataClaim }}
          claimName: {{ .Values.logVolume.existingDataClaim }}
          {{- else }}
          claimName: {{ template "slack.fullname" . }}-logs
          {{- end -}}
      {{- else }}
        emptyDir: {}
      {{- end }}      
      {{- if not (.Values.global.appSettings.useLocalHcpVault) }}     
      - name: rsa-keys
        secret:
          secretName: {{ .Values.global.secrets.rsaKeys }} 
      - name: secrets
        secret:
          secretName: {{ .Values.secrets.slackSecrets }}
      {{- end }}
      - name: config-volume
        configMap:
          name: {{ include "appsettings.config" . }}
      - name: service-account-token
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              path: token
              expirationSeconds: 600 # 10 minutes is the minimum TTL              