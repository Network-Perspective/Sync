# shared between all connectors subcharts
global:
  imagePullSecrets: 
    - name: null

  mssql:
    saSecret: np-sync-mssql-sapassword    

  appSettings:
    networkPerspectiveApi: https://staging.networkperspective.io/    
    useLocalHcpVault: false
    hcpVaultUri: "http://np-sync-vault:8200"

  domainValidation:
    enabled: false    

  nodeSelector: {}
  tolerations: []
  affinity: {}
  redeployOnUpdate: true

mssql:
  enabled: true
  edition: 
    value: Express

gsuite:
  enabled: true
  googleKeys: "np-sync-gsuite-secrets"
  ingress:
    hosts: 
    - host: gsuite-sync

slack:
  enabled: true
  slackSecrets: "np-sync-slack-secrets"
  ingress:
    hosts: 
    - host: slack-sync    

excel:
  enabled: true
  excelSecrets: "np-sync-excel-secrets"
  # extraEnvironmentVars:
  #   test: "test-value"
  #   test2: "test-value2"
  ingress:
    hosts: 
    - host: excel-sync    

vault:
  global:
    enabled: true
    tlsDisable: false
  injector:
    enabled: false
  server:
    dev:
      enabled: true  # Set to false if you are going production
    standalone:
      config: |
        ui = true
        
        storage "file" {
          path = "/vault/data"
        }
        listener "tcp" {
          address = "0.0.0.0:8200"
        }
    service:
      type: ClusterIP
    auditStorage:      
      enabled: false
    extraEnvironmentVars:
      VAULT_ADDR: "http://np-sync-vault:8200"

    # a sidecar that will trigger reload of vault config including tls certificates every 24 hours
    shareProcessNamespace: true    
    extraContainers: null

networkPolicy:
  # forbid traffic from other namespaces
  enabled: false

nLogSettings:
  content: |
    {
      "Logging": {
        "NLog": {
          "IncludeScopes": true
        }
      },
      "NLog": {
        "throwConfigExceptions": true,
        "extensions": [
          { "assembly": "NLog.Web.AspNetCore" },
          { "assembly": "NLog.Extensions.Logging" },
          { "assembly": "Microsoft.ApplicationInsights.NLogTarget" }
        ],
        "variables": {
          "layoutHeader": "${date:universalTime=true:format=yyyy-MM-dd HH\\:mm\\:ss.fff}|${level:truncate=4:uppercase=true}|${logger}",
          "layoutBody": "${message}${exception:format=tostring}",
          "minLevel": "Debug"
        },
        "targets": {
          "console": {
            "type": "ColoredConsole",
            "layout": "${layoutHeader}|${layoutBody}"
          }
        },
        "rules": [          
          {
            "logger": "*",
            "minLevel": "${minLevel}",
            "writeTo": "console"
          }          
        ]
      }
    }

